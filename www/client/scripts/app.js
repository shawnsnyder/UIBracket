// Generated by CoffeeScript 1.6.3
define(["layoutmanager"], function(LayoutManager) {
  var JST, app;
  app = {
    root: "/"
  };
  JST = window.JST = window.JST || {};
  LayoutManager.configure({
    manage: true,
    prefix: "scripts/templates/",
    fetch: function(path) {
      var done;
      path = path + ".html";
      if (JST[path]) {
        return JST[path];
      }
      done = this.async();
      return $.get(app.root + path, (function(contents) {
        return done(_.template(contents));
      }), "text");
    }
  });
  return _.extend(app, {
    initialize: function() {
      return this.bindEvents();
    },
    bindEvents: function() {
      return document.addEventListener("deviceready", this.onDeviceReady, false);
    },
    onDeviceReady: function() {
      return app.receivedEvent("deviceready");
    },
    receivedEvent: function(id) {
      var listeningElement, parentElement, receivedElement;
      parentElement = document.getElementById(id);
      listeningElement = parentElement.querySelector(".listening");
      receivedElement = parentElement.querySelector(".received");
      listeningElement.setAttribute("style", "display:none;");
      receivedElement.setAttribute("style", "display:block;");
      return console.log("Received Event: " + id);
    },
    module: function(additionalProps) {
      return _.extend({
        Views: {}
      }, additionalProps);
    },
    useLayout: function(name, options) {
      if (_.isObject(name)) {
        options = name;
      }
      options = options || {};
      if (_.isString(name)) {
        options.template = name;
      }
      if (this.layout) {
        this.layout.template = options.template;
      } else {
        this.layout = new Backbone.Layout(_.extend({
          el: "main"
        }, options));
      }
      return this.layout;
    }
  }, Backbone.Events);
});
